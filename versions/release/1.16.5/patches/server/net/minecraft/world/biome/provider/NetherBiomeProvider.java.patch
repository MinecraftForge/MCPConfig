--- a/net/minecraft/world/biome/provider/NetherBiomeProvider.java
+++ b/net/minecraft/world/biome/provider/NetherBiomeProvider.java
@@ -32,7 +32,7 @@
    public static final MapCodec<NetherBiomeProvider> field_235262_e_ = RecordCodecBuilder.mapCodec((p_242602_0_) -> {
       return p_242602_0_.group(Codec.LONG.fieldOf("seed").forGetter((p_235286_0_) -> {
          return p_235286_0_.field_235270_m_;
-      }), RecordCodecBuilder.create((p_235282_0_) -> {
+      }), RecordCodecBuilder.<Pair<Biome.Attributes, Supplier<Biome>>>create((p_235282_0_) -> {
          return p_235282_0_.group(Biome.Attributes.field_235104_a_.fieldOf("parameters").forGetter(Pair::getFirst), Biome.field_235051_b_.fieldOf("biome").forGetter(Pair::getSecond)).apply(p_235282_0_, Pair::of);
       }).listOf().fieldOf("biomes").forGetter((p_235284_0_) -> {
          return p_235284_0_.field_235268_k_;
@@ -49,7 +49,7 @@
    public static final Codec<NetherBiomeProvider> field_235263_f_ = Codec.mapEither(NetherBiomeProvider.DefaultBuilder.field_242624_a, field_235262_e_).xmap((p_235277_0_) -> {
       return p_235277_0_.map(NetherBiomeProvider.DefaultBuilder::func_242635_d, Function.identity());
    }, (p_235275_0_) -> {
-      return p_235275_0_.func_242605_d().map(Either::left).orElseGet(() -> {
+      return p_235275_0_.func_242605_d().map(Either::<NetherBiomeProvider.DefaultBuilder, NetherBiomeProvider>left).orElseGet(() -> {
          return Either.right(p_235275_0_);
       });
    }).codec();
