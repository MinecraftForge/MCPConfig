--- a/net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix.java
+++ b/net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix.java
@@ -20,8 +20,8 @@
    }
 
    public TypeRewriteRule makeRule() {
-      TaggedChoice.TaggedChoiceType<String> taggedchoicetype = this.getInputSchema().findChoiceType(References.f_16786_);
-      TaggedChoice.TaggedChoiceType<String> taggedchoicetype1 = this.getOutputSchema().findChoiceType(References.f_16786_);
+      TaggedChoice.TaggedChoiceType<String> taggedchoicetype = (TaggedChoice.TaggedChoiceType<String>)this.getInputSchema().findChoiceType(References.f_16786_);
+      TaggedChoice.TaggedChoiceType<String> taggedchoicetype1 = (TaggedChoice.TaggedChoiceType<String>)this.getOutputSchema().findChoiceType(References.f_16786_);
       return this.fixTypeEverywhere("EntityMinecartIdentifiersFix", taggedchoicetype, taggedchoicetype1, (p_15485_) -> {
          return (p_145290_) -> {
             if (!Objects.equals(p_145290_.getFirst(), "Minecart")) {
@@ -37,7 +37,7 @@
                   s = "MinecartRideable";
                }
 
-               return Pair.of(s, typed.write().map((p_145294_) -> {
+               return Pair.of(s, ((com.mojang.serialization.DataResult<com.mojang.serialization.Dynamic<Pair<String, ?>>>)typed.write()).map((p_145294_) -> {
                   return taggedchoicetype1.types().get(s).read(p_145294_);
                }).result().orElseThrow(() -> {
                   return new IllegalStateException("Could not read the new minecart.");
