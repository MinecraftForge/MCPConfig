--- a/net/minecraft/world/entity/ai/Brain.java
+++ b/net/minecraft/world/entity/ai/Brain.java
@@ -181,14 +181,14 @@
       if (optional == null) {
          throw new IllegalStateException("Unregistered memory fetched: " + p_21953_);
       } else {
-         return optional.map(ExpirableValue::m_26319_);
+         return (Optional<U>)optional.map(ExpirableValue::m_26319_);
       }
    }
 
    @Nullable
    public <U> Optional<U> m_257414_(MemoryModuleType<U> p_259344_) {
       Optional<? extends ExpirableValue<?>> optional = this.f_21843_.get(p_259344_);
-      return optional == null ? null : optional.map(ExpirableValue::m_26319_);
+      return optional == null ? null : (Optional<U>)optional.map(ExpirableValue::m_26319_);
    }
 
    public <U> long m_147341_(MemoryModuleType<U> p_147342_) {
@@ -483,7 +483,7 @@
       private final Optional<? extends ExpirableValue<U>> f_22031_;
 
       static <U> Brain.MemoryValue<U> m_22059_(MemoryModuleType<U> p_22060_, Optional<? extends ExpirableValue<?>> p_22061_) {
-         return new Brain.MemoryValue<>(p_22060_, p_22061_);
+         return new Brain.MemoryValue<U>(p_22060_, (Optional<? extends ExpirableValue<U>>)p_22061_);
       }
 
       MemoryValue(MemoryModuleType<U> p_22033_, Optional<? extends ExpirableValue<U>> p_22034_) {
