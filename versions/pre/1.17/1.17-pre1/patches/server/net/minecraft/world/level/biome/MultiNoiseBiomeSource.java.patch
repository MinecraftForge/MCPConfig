--- a/net/minecraft/world/level/biome/MultiNoiseBiomeSource.java
+++ b/net/minecraft/world/level/biome/MultiNoiseBiomeSource.java
@@ -29,7 +29,7 @@
    public static final MapCodec<MultiNoiseBiomeSource> f_48424_ = RecordCodecBuilder.mapCodec((p_48477_) -> {
       return p_48477_.group(Codec.LONG.fieldOf("seed").forGetter((p_48500_) -> {
          return p_48500_.f_48437_;
-      }), RecordCodecBuilder.create((p_48487_) -> {
+      }), RecordCodecBuilder.<Pair<Biome.ClimateParameters, Supplier<Biome>>>create((p_48487_) -> {
          return p_48487_.group(Biome.ClimateParameters.f_47649_.fieldOf("parameters").forGetter(Pair::getFirst), Biome.f_47431_.fieldOf("biome").forGetter(Pair::getSecond)).apply(p_48487_, Pair::of);
       }).listOf().fieldOf("biomes").forGetter((p_48498_) -> {
          return p_48498_.f_48435_;
@@ -46,7 +46,7 @@
    public static final Codec<MultiNoiseBiomeSource> f_48425_ = Codec.mapEither(MultiNoiseBiomeSource.PresetInstance.f_48540_, f_48424_).xmap((p_48473_) -> {
       return p_48473_.map(MultiNoiseBiomeSource.PresetInstance::m_48565_, Function.identity());
    }, (p_48471_) -> {
-      return p_48471_.m_48490_().map(Either::left).orElseGet(() -> {
+      return p_48471_.m_48490_().map(Either::<MultiNoiseBiomeSource.PresetInstance, MultiNoiseBiomeSource>left).orElseGet(() -> {
          return Either.right(p_48471_);
       });
    }).codec();
