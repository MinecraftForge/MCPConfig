--- a/net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement.java
+++ b/net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement.java
@@ -11,7 +11,7 @@
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 
 public record RandomSpreadStructurePlacement(int f_204973_, int f_204974_, RandomSpreadType f_204975_, int f_204976_, Vec3i f_204977_) implements StructurePlacement {
-   public static final Codec<RandomSpreadStructurePlacement> f_204972_ = RecordCodecBuilder.mapCodec((p_204996_) -> {
+   public static final Codec<RandomSpreadStructurePlacement> f_204972_ = RecordCodecBuilder.<RandomSpreadStructurePlacement>mapCodec((p_204996_) -> {
       return p_204996_.group(Codec.intRange(0, 4096).fieldOf("spacing").forGetter(RandomSpreadStructurePlacement::f_204973_), Codec.intRange(0, 4096).fieldOf("separation").forGetter(RandomSpreadStructurePlacement::f_204974_), RandomSpreadType.f_205014_.optionalFieldOf("spread_type", RandomSpreadType.LINEAR).forGetter(RandomSpreadStructurePlacement::f_204975_), ExtraCodecs.f_144628_.fieldOf("salt").forGetter(RandomSpreadStructurePlacement::f_204976_), Vec3i.m_194650_(16).optionalFieldOf("locate_offset", Vec3i.f_123288_).forGetter(RandomSpreadStructurePlacement::f_204977_)).apply(p_204996_, RandomSpreadStructurePlacement::new);
    }).flatXmap((p_205002_) -> {
       return p_205002_.f_204973_ <= p_205002_.f_204974_ ? DataResult.error("Spacing has to be larger than separation") : DataResult.success(p_205002_);
