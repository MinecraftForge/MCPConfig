--- a/net/minecraft/world/level/levelgen/SurfaceRules.java
+++ b/net/minecraft/world/level/levelgen/SurfaceRules.java
@@ -426,8 +426,6 @@
    }
 
    static record NoiseThresholdConditionSource(ResourceKey<NormalNoise.NoiseParameters> f_189627_, double f_189628_, double f_189629_) implements SurfaceRules.ConditionSource {
-      final double f_189628_;
-      final double f_189629_;
       static final Codec<SurfaceRules.NoiseThresholdConditionSource> f_189630_ = RecordCodecBuilder.create((p_189638_) -> {
          return p_189638_.group(ResourceKey.m_195966_(Registry.f_194568_).fieldOf("noise").forGetter(SurfaceRules.NoiseThresholdConditionSource::f_189627_), Codec.DOUBLE.fieldOf("min_threshold").forGetter(SurfaceRules.NoiseThresholdConditionSource::f_189628_), Codec.DOUBLE.fieldOf("max_threshold").forGetter(SurfaceRules.NoiseThresholdConditionSource::f_189629_)).apply(p_189638_, SurfaceRules.NoiseThresholdConditionSource::new);
       });
@@ -543,9 +541,6 @@
    }
 
    static record StoneDepthCheck(int f_189740_, boolean f_189741_, boolean f_189742_, CaveSurface f_189743_) implements SurfaceRules.ConditionSource {
-      final int f_189740_;
-      final boolean f_189741_;
-      final boolean f_189742_;
       static final Codec<SurfaceRules.StoneDepthCheck> f_189744_ = RecordCodecBuilder.create((p_189753_) -> {
          return p_189753_.group(Codec.INT.fieldOf("offset").forGetter(SurfaceRules.StoneDepthCheck::f_189740_), Codec.BOOL.fieldOf("add_surface_depth").forGetter(SurfaceRules.StoneDepthCheck::f_189741_), Codec.BOOL.fieldOf("add_surface_secondary_depth").forGetter(SurfaceRules.StoneDepthCheck::f_189742_), CaveSurface.f_162094_.fieldOf("surface_type").forGetter(SurfaceRules.StoneDepthCheck::f_189743_)).apply(p_189753_, SurfaceRules.StoneDepthCheck::new);
       });
@@ -649,9 +644,6 @@
    }
 
    static record WaterConditionSource(int f_189863_, int f_189864_, boolean f_189865_) implements SurfaceRules.ConditionSource {
-      final int f_189863_;
-      final int f_189864_;
-      final boolean f_189865_;
       static final Codec<SurfaceRules.WaterConditionSource> f_189866_ = RecordCodecBuilder.create((p_189874_) -> {
          return p_189874_.group(Codec.INT.fieldOf("offset").forGetter(SurfaceRules.WaterConditionSource::f_189863_), Codec.intRange(-20, 20).fieldOf("surface_depth_multiplier").forGetter(SurfaceRules.WaterConditionSource::f_189864_), Codec.BOOL.fieldOf("add_stone_depth").forGetter(SurfaceRules.WaterConditionSource::f_189865_)).apply(p_189874_, SurfaceRules.WaterConditionSource::new);
       });
@@ -676,9 +668,6 @@
    }
 
    static record YConditionSource(VerticalAnchor f_189444_, int f_189445_, boolean f_189446_) implements SurfaceRules.ConditionSource {
-      final VerticalAnchor f_189444_;
-      final int f_189445_;
-      final boolean f_189446_;
       static final Codec<SurfaceRules.YConditionSource> f_189447_ = RecordCodecBuilder.create((p_189455_) -> {
          return p_189455_.group(VerticalAnchor.f_158914_.fieldOf("anchor").forGetter(SurfaceRules.YConditionSource::f_189444_), Codec.intRange(-20, 20).fieldOf("surface_depth_multiplier").forGetter(SurfaceRules.YConditionSource::f_189445_), Codec.BOOL.fieldOf("add_stone_depth").forGetter(SurfaceRules.YConditionSource::f_189446_)).apply(p_189455_, SurfaceRules.YConditionSource::new);
       });
