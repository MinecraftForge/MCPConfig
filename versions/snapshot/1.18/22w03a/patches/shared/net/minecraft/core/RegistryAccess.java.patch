--- a/net/minecraft/core/RegistryAccess.java
+++ b/net/minecraft/core/RegistryAccess.java
@@ -72,7 +72,7 @@
 
    public <E> Optional<? extends Registry<E>> m_6632_(ResourceKey<? extends Registry<? extends E>> p_123085_) {
       Optional<? extends Registry<E>> optional = this.m_142664_(p_123085_);
-      return optional.isPresent() ? optional : Registry.f_122897_.m_6612_(p_123085_.m_135782_());
+      return optional.isPresent() ? optional : (Optional<? extends Registry<E>>)Registry.f_122897_.m_6612_(p_123085_.m_135782_());
    }
 
    public <E> Registry<E> m_175515_(ResourceKey<? extends Registry<? extends E>> p_175516_) {
@@ -124,7 +124,7 @@
    }
 
    private static <R extends Registry<?>> void m_123078_(RegistryAccess.RegistryHolder p_123079_, ResourceKey<R> p_123080_) {
-      Registry<R> registry = BuiltinRegistries.f_123858_;
+      Registry<R> registry = (Registry<R>)BuiltinRegistries.f_123858_;
       Registry<?> registry1 = registry.m_123013_(p_123080_);
       m_123068_(p_123079_, registry1);
    }
@@ -180,7 +180,7 @@
 
       private static <K extends ResourceKey<? extends Registry<?>>, V extends MappedRegistry<?>> Codec<RegistryAccess.RegistryHolder> m_123118_(UnboundedMapCodec<K, V> p_123119_) {
          return p_123119_.xmap(RegistryAccess.RegistryHolder::new, (p_123136_) -> {
-            return p_123136_.f_123113_.entrySet().stream().filter((p_175526_) -> {
+            return ((Map<K, V>)p_123136_.f_123113_).entrySet().stream().filter((p_175526_) -> {
                return RegistryAccess.f_123048_.get(p_175526_.getKey()).m_123111_();
             }).collect(ImmutableMap.toImmutableMap(Entry::getKey, Entry::getValue));
          });
@@ -188,7 +188,7 @@
 
       private static <E> DataResult<? extends Codec<E>> m_123137_(ResourceKey<? extends Registry<E>> p_123138_) {
          return Optional.ofNullable(RegistryAccess.f_123048_.get(p_123138_)).map((p_123123_) -> {
-            return p_123123_.f_123103_();
+            return (Codec<E>)p_123123_.f_123103_();
          }).map(DataResult::success).orElseGet(() -> {
             return DataResult.error("Unknown or not serializable registry: " + p_123138_);
          });
@@ -205,7 +205,7 @@
       }
 
       private static <E> MappedRegistry<?> m_194629_(ResourceKey<? extends Registry<?>> p_194630_, Dynamic<?> p_194631_) {
-         return (MappedRegistry)RegistryLookupCodec.m_135622_(p_194630_).codec().parse(p_194631_).resultOrPartial(Util.m_137489_(p_194630_ + " registry: ", RegistryAccess.f_123047_::error)).orElseThrow(() -> {
+         return (MappedRegistry)RegistryLookupCodec.m_135622_((ResourceKey<? extends Registry<E>>)p_194630_).codec().parse(p_194631_).resultOrPartial(Util.m_137489_(p_194630_ + " registry: ", RegistryAccess.f_123047_::error)).orElseThrow(() -> {
             return new IllegalStateException("Failed to get " + p_194630_ + " registry");
          });
       }
@@ -215,12 +215,12 @@
       }
 
       private static <E> MappedRegistry<?> m_123140_(ResourceKey<? extends Registry<?>> p_123141_) {
-         return new MappedRegistry<>(p_123141_, Lifecycle.stable());
+         return new MappedRegistry(p_123141_, Lifecycle.stable());
       }
 
       public <E> Optional<WritableRegistry<E>> m_142664_(ResourceKey<? extends Registry<? extends E>> p_175528_) {
          return Optional.ofNullable(this.f_123113_.get(p_175528_)).map((p_194628_) -> {
-            return p_194628_;
+            return (WritableRegistry<E>)p_194628_;
          });
       }
    }
